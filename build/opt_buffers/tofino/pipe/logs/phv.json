{
    "build_date": "Mon Jul 25 22:05:33 2022",
    "compiler_version": "9.8.0",
    "constraint_reasons": [
        "Solitary (ALU): This field cannot be packed with anything else due to ALU operation.",
        "Solitary (Intrinsic): This field cannot be packed with anything else due to hardware requirement.",
        "Solitary (Checksum): This field cannot be packed with anything else because it is used as a checksum calculation result.",
        "Solitary (Last byte): This field cannot be packed with anything else in its non-full last byte.",
        "Solitary (Mirror): This field cannot be packed with any field that is mirrored.",
        "Solitary (Container size): This field was constrained with pa_container_size pragma in a way that requires it to be solitary.",
        "Solitary (Pragma): This field was constrained by pa_solitary pragma.",
        "Solitary (Except same digest): This field cannot be packed with anything else that does not belong to the same digest field list.",
        "Different Container: This field cannot be packed into same container with listed fields or their slices.",
        "MAU Group: This field (or its particular slices) must be in the same MAU group as other fields or slices.",
        "No Split: This field must be entirely allocated to a single PHV container. Fields that are shifted or are the destination of arithmetic operation have this constraint.",
        "Container Size: Slices of this field can only be placed into containers of specific sizes. Container size is in bits.",
        "Alignment: Field has to be placed at a given offset within a container.",
        "No Overlay: Field cannot be overlayed with any other field.",
        "Exact Container: If any field slice in a PHV container has this constraint, then the container must be completely filled, and if it contains more than one slice, all slices must be layed contiguously (in order). All header fields have this constraint.",
        "Equivalent Alignment: Each field in this group must be placed starting at the same least-significant bit in their respective PHV containers. This constraint implies MAU Group.",
        "No Holes: Field can either be located entirely on a single container or be splitted across multiple containers as long as all of the slices fit with no holes (concatenating the containers would reconstruct the field). This constraint relaxes Exact Containers by allowing to split the field.",
        "Same Container Group: All slices of this field must be present in the same MAU group. This constraint does not imply MAU group, but it makes it stricter if it is present."
    ],
    "containers": [
        {
            "bit_width": 16,
            "container_type": "tagalong",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 321,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.dst_addr",
                        "slice_info": {
                            "lsb": 32,
                            "msb": 47
                        }
                    },
                    "phv_number": 321,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 32,
            "container_type": "tagalong",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 256,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.dst_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 256,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 16,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 8,
            "phv_mau_group_number": 8,
            "phv_number": 128,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.src_addr",
                        "slice_info": {
                            "lsb": 32,
                            "msb": 47
                        }
                    },
                    "phv_number": 128,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        },
                        {
                            "location": {
                                "detail": "xbar",
                                "stage": 0,
                                "type": "mau",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 32,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 0,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.src_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 0,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        },
                        {
                            "location": {
                                "detail": "xbar",
                                "stage": 0,
                                "type": "mau",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 16,
            "container_type": "tagalong",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 320,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.ether_type",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 15
                        }
                    },
                    "phv_number": 320,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 32,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 1,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ipv4.dst_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 1,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 8,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 4,
            "phv_mau_group_number": 4,
            "phv_number": 64,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "ig_intr_md_for_dprsr.drop_ctl",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 2
                        }
                    },
                    "phv_number": 64,
                    "reads": [
                        {
                            "location": {
                                "detail": "imeta",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.drop",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 8,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 4,
            "phv_mau_group_number": 4,
            "phv_number": 65,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_first_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 0
                        }
                    },
                    "phv_number": 65,
                    "reads": [],
                    "slice_info": {
                        "lsb": 1,
                        "msb": 1
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.Enqueue.first_action",
                                "table": "SwitchIngress.Enqueue.first_table"
                            }
                        }
                    ]
                },
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.$valid",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 0
                        }
                    },
                    "phv_number": 65,
                    "reads": [
                        {
                            "location": {
                                "detail": "pov",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "bit_width": 32,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 3,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_tail_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 3,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 1,
                                "type": "mau",
                                "action": "SwitchIngress.Enqueue.inc_tail",
                                "table": "SwitchIngress.Enqueue.inc_tail_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Dequeue_head_tmp"
                    ]
                },
                {
                    "field_slice": {
                        "field_name": "Dequeue_head_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 3,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 1,
                                "type": "mau",
                                "action": "SwitchIngress.Dequeue.inc_head",
                                "table": "SwitchIngress.Dequeue.inc_head_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Enqueue_tail_tmp"
                    ]
                }
            ]
        },
        {
            "bit_width": 32,
            "container_type": "normal",
            "gress": "ingress",
            "phv_deparser_group_number": 0,
            "phv_mau_group_number": 0,
            "phv_number": 2,
            "slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_left_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 2,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [],
                    "mutually_exclusive_with": [
                        "Dequeue_size_tmp"
                    ]
                },
                {
                    "field_slice": {
                        "field_name": "Dequeue_size_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 2,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.Dequeue.dec_size",
                                "table": "SwitchIngress.Dequeue.dec_size_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Enqueue_left_tmp"
                    ]
                }
            ]
        }
    ],
    "fields": [
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "IntConstraint",
                            "value": 0,
                            "id": 12,
                            "name": "Alignment",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 40
                            }
                        },
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 14,
                            "name": "ExactContainer",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 40
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 48,
                "field_class": "pkt",
                "field_name": "hdr.ethernet.dst_addr",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "hdr.ethernet.dst_addr",
                    "slice_info": {
                        "lsb": 32,
                        "msb": 47
                    }
                },
                {
                    "field_name": "hdr.ethernet.dst_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.dst_addr",
                        "slice_info": {
                            "lsb": 32,
                            "msb": 47
                        }
                    },
                    "phv_number": 321,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                },
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.dst_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 256,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "hdr.ethernet"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "IntConstraint",
                            "value": 0,
                            "id": 12,
                            "name": "Alignment",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 41
                            }
                        },
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 14,
                            "name": "ExactContainer",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 41
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 48,
                "field_class": "pkt",
                "field_name": "hdr.ethernet.src_addr",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "hdr.ethernet.src_addr",
                    "slice_info": {
                        "lsb": 32,
                        "msb": 47
                    }
                },
                {
                    "field_name": "hdr.ethernet.src_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.src_addr",
                        "slice_info": {
                            "lsb": 32,
                            "msb": 47
                        }
                    },
                    "phv_number": 128,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        },
                        {
                            "location": {
                                "detail": "xbar",
                                "stage": 0,
                                "type": "mau",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                },
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.src_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 0,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        },
                        {
                            "location": {
                                "detail": "xbar",
                                "stage": 0,
                                "type": "mau",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "hdr.ethernet"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "IntConstraint",
                            "value": 0,
                            "id": 12,
                            "name": "Alignment",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 42
                            }
                        },
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 14,
                            "name": "ExactContainer",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 42
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 16,
                "field_class": "pkt",
                "field_name": "hdr.ethernet.ether_type",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "hdr.ethernet.ether_type",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.ether_type",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 15
                        }
                    },
                    "phv_number": 320,
                    "reads": [
                        {
                            "location": {
                                "detail": "pkt",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "hdr.ethernet"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 1,
                "field_class": "pov",
                "field_name": "hdr.ethernet.$valid",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "hdr.ethernet.$valid",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ethernet.$valid",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 0
                        }
                    },
                    "phv_number": 65,
                    "reads": [
                        {
                            "location": {
                                "detail": "pov",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "hdr.ethernet"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 4,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.version",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 4,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.ihl",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 8,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.diffserv",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 16,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.total_len",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 16,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.identification",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 3,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.flags",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 13,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.frag_offset",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 8,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.ttl",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 8,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.protocol",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 16,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.hdr_checksum",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 32,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.src_addr",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "IntConstraint",
                            "value": 0,
                            "id": 12,
                            "name": "Alignment",
                            "source": {
                                "file": "/root/ring-buffer/include/headers.p4",
                                "line": 71
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 32,
                "field_class": "pkt",
                "field_name": "hdr.ipv4.dst_addr",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "hdr.ipv4.dst_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "hdr.ipv4.dst_addr",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 1,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "ibuf",
                                "state": "TofinoIngressParser_parse_port_metadata",
                                "type": "parser"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 1,
                "field_class": "pov",
                "field_name": "hdr.ipv4.$valid",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "hdr.ipv4"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 10,
                            "name": "NoSplit",
                            "source": {
                                "file": "/root/bf-sde-9.8.0/install/share/p4c/p4include/tofino1_base.p4",
                                "line": 200
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 3,
                "field_class": "imeta",
                "field_name": "ig_intr_md_for_dprsr.drop_ctl",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "ig_intr_md_for_dprsr.drop_ctl",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "ig_intr_md_for_dprsr.drop_ctl",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 2
                        }
                    },
                    "phv_number": 64,
                    "reads": [
                        {
                            "location": {
                                "detail": "imeta",
                                "type": "deparser"
                            }
                        }
                    ],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.drop",
                                "table": "SwitchIngress.dmac"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "ig_intr_md_for_dprsr"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 7,
                            "name": "Solitary",
                            "source": {
                                "file": "/root/bf-sde-9.8.0/install/share/p4c/p4include/tofino1_base.p4",
                                "line": 205
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 3,
                "field_class": "imeta",
                "field_name": "ig_intr_md_for_dprsr.digest_type",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "ig_intr_md_for_dprsr"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 1,
                            "name": "Solitary",
                            "source": {
                                "file": "/root/bf-sde-9.8.0/install/share/p4c/p4include/tofino1_base.p4",
                                "line": 207
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 3,
                "field_class": "imeta",
                "field_name": "ig_intr_md_for_dprsr.resubmit_type",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "ig_intr_md_for_dprsr"
        },
        {
            "constraints": [
                {
                    "base_constraint": [
                        {
                            "constraint_type": "BoolConstraint",
                            "inverted": false,
                            "id": 1,
                            "name": "Solitary",
                            "source": {
                                "file": "/root/bf-sde-9.8.0/install/share/p4c/p4include/tofino1_base.p4",
                                "line": 209
                            }
                        }
                    ]
                }
            ],
            "field_info": {
                "bit_width": 3,
                "field_class": "imeta",
                "field_name": "ig_intr_md_for_dprsr.mirror_type",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "ig_intr_md_for_dprsr"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 1,
                "field_class": "meta",
                "field_name": "Enqueue_first_tmp",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "Enqueue_first_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_first_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 0
                        }
                    },
                    "phv_number": 65,
                    "reads": [],
                    "slice_info": {
                        "lsb": 1,
                        "msb": 1
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.Enqueue.first_action",
                                "table": "SwitchIngress.Enqueue.first_table"
                            }
                        }
                    ]
                }
            ],
            "status": "allocated",
            "structure": "Enqueue_first_tmp"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 32,
                "field_class": "meta",
                "field_name": "Enqueue_tail_tmp",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "Enqueue_tail_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_tail_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 3,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 1,
                                "type": "mau",
                                "action": "SwitchIngress.Enqueue.inc_tail",
                                "table": "SwitchIngress.Enqueue.inc_tail_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Dequeue_head_tmp"
                    ]
                }
            ],
            "status": "allocated",
            "structure": "Enqueue_tail_tmp"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 32,
                "field_class": "meta",
                "field_name": "Enqueue_left_tmp",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "Enqueue_left_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "Enqueue_left_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 2,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [],
                    "mutually_exclusive_with": [
                        "Dequeue_size_tmp"
                    ]
                }
            ],
            "status": "allocated",
            "structure": "Enqueue_left_tmp"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 32,
                "field_class": "meta",
                "field_name": "Dequeue_size_tmp",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "Dequeue_size_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "Dequeue_size_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 2,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 0,
                                "type": "mau",
                                "action": "SwitchIngress.Dequeue.dec_size",
                                "table": "SwitchIngress.Dequeue.dec_size_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Enqueue_left_tmp"
                    ]
                }
            ],
            "status": "allocated",
            "structure": "Dequeue_size_tmp"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 32,
                "field_class": "meta",
                "field_name": "Dequeue_head_tmp",
                "gress": "ingress"
            },
            "field_slices": [
                {
                    "field_name": "Dequeue_head_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "phv_slices": [
                {
                    "field_slice": {
                        "field_name": "Dequeue_head_tmp",
                        "slice_info": {
                            "lsb": 0,
                            "msb": 31
                        }
                    },
                    "phv_number": 3,
                    "reads": [],
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    },
                    "writes": [
                        {
                            "location": {
                                "detail": "vliw",
                                "stage": 1,
                                "type": "mau",
                                "action": "SwitchIngress.Dequeue.inc_head",
                                "table": "SwitchIngress.Dequeue.inc_head_table"
                            }
                        }
                    ],
                    "mutually_exclusive_with": [
                        "Enqueue_tail_tmp"
                    ]
                }
            ],
            "status": "allocated",
            "structure": "Dequeue_head_tmp"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 10,
                "field_class": "meta",
                "field_name": "sizes$index",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "sizes$index"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 1,
                "field_class": "meta",
                "field_name": "sizes$ena",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "sizes$ena"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 10,
                "field_class": "meta",
                "field_name": "ring_buffers$index",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "ring_buffers$index"
        },
        {
            "constraints": [],
            "field_info": {
                "bit_width": 1,
                "field_class": "meta",
                "field_name": "ring_buffers$ena",
                "gress": "ingress"
            },
            "field_slices": [],
            "phv_slices": [],
            "status": "unreferenced",
            "structure": "ring_buffers$ena"
        }
    ],
    "nStages": 12,
    "pov_structure": [],
    "program_name": "opt_buffers.p4",
    "resources": [
        {
            "addresses": [
                288,
                289,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298,
                299,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307,
                308,
                309,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319
            ],
            "bit_width": 8,
            "group_type": "mau",
            "num_containers": 32
        },
        {
            "addresses": [
                320,
                321,
                322,
                323,
                324,
                325,
                326,
                327,
                328,
                329,
                330,
                331,
                332,
                333,
                334,
                335,
                336,
                337,
                338,
                339,
                340,
                341,
                342,
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                350,
                351,
                352,
                353,
                354,
                355,
                356,
                357,
                358,
                359,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367
            ],
            "bit_width": 16,
            "group_type": "mau",
            "num_containers": 48
        },
        {
            "addresses": [
                256,
                257,
                258,
                259,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287
            ],
            "bit_width": 32,
            "group_type": "mau",
            "num_containers": 32
        },
        {
            "addresses": [
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127
            ],
            "bit_width": 8,
            "group_type": "mau",
            "num_containers": 64
        },
        {
            "addresses": [
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241,
                242,
                243,
                244,
                245,
                246,
                247,
                248,
                249,
                250,
                251,
                252,
                253,
                254,
                255
            ],
            "bit_width": 16,
            "group_type": "mau",
            "num_containers": 128
        },
        {
            "addresses": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63
            ],
            "bit_width": 32,
            "group_type": "mau",
            "num_containers": 64
        },
        {
            "addresses": [
                288,
                289,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298,
                299,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307,
                308,
                309,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319
            ],
            "bit_width": 8,
            "group_type": "deparser",
            "num_containers": 32
        },
        {
            "addresses": [
                320,
                321,
                322,
                323,
                324,
                325,
                326,
                327,
                328,
                329,
                330,
                331,
                332,
                333,
                334,
                335,
                336,
                337,
                338,
                339,
                340,
                341,
                342,
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                350,
                351,
                352,
                353,
                354,
                355,
                356,
                357,
                358,
                359,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367
            ],
            "bit_width": 16,
            "group_type": "deparser",
            "num_containers": 48
        },
        {
            "addresses": [
                256,
                257,
                258,
                259,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287
            ],
            "bit_width": 32,
            "group_type": "deparser",
            "num_containers": 32
        },
        {
            "addresses": [
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127
            ],
            "bit_width": 8,
            "group_type": "deparser",
            "num_containers": 64
        },
        {
            "addresses": [
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241,
                242,
                243,
                244,
                245,
                246,
                247,
                248,
                249,
                250,
                251,
                252,
                253,
                254,
                255
            ],
            "bit_width": 16,
            "group_type": "deparser",
            "num_containers": 128
        },
        {
            "addresses": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63
            ],
            "bit_width": 32,
            "group_type": "deparser",
            "num_containers": 64
        }
    ],
    "run_id": "89d8164a6d3259e2",
    "schema_version": "3.0.0",
    "structures": [
        {
            "gress": "ingress",
            "name": "hdr.ethernet",
            "ordered_fields": [
                {
                    "field_name": "hdr.ethernet.dst_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 47
                    }
                },
                {
                    "field_name": "hdr.ethernet.src_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 47
                    }
                },
                {
                    "field_name": "hdr.ethernet.ether_type",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    }
                },
                {
                    "field_name": "hdr.ethernet.$valid",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "hdr.ipv4",
            "ordered_fields": [
                {
                    "field_name": "hdr.ipv4.version",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 3
                    }
                },
                {
                    "field_name": "hdr.ipv4.ihl",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 3
                    }
                },
                {
                    "field_name": "hdr.ipv4.diffserv",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 7
                    }
                },
                {
                    "field_name": "hdr.ipv4.total_len",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    }
                },
                {
                    "field_name": "hdr.ipv4.identification",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    }
                },
                {
                    "field_name": "hdr.ipv4.flags",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                },
                {
                    "field_name": "hdr.ipv4.frag_offset",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 12
                    }
                },
                {
                    "field_name": "hdr.ipv4.ttl",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 7
                    }
                },
                {
                    "field_name": "hdr.ipv4.protocol",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 7
                    }
                },
                {
                    "field_name": "hdr.ipv4.hdr_checksum",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 15
                    }
                },
                {
                    "field_name": "hdr.ipv4.src_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                },
                {
                    "field_name": "hdr.ipv4.dst_addr",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                },
                {
                    "field_name": "hdr.ipv4.$valid",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "ig_intr_md_for_dprsr",
            "ordered_fields": [
                {
                    "field_name": "ig_intr_md_for_dprsr.drop_ctl",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                },
                {
                    "field_name": "ig_intr_md_for_dprsr.digest_type",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                },
                {
                    "field_name": "ig_intr_md_for_dprsr.resubmit_type",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                },
                {
                    "field_name": "ig_intr_md_for_dprsr.mirror_type",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 2
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "Enqueue_first_tmp",
            "ordered_fields": [
                {
                    "field_name": "Enqueue_first_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "Enqueue_tail_tmp",
            "ordered_fields": [
                {
                    "field_name": "Enqueue_tail_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "Enqueue_left_tmp",
            "ordered_fields": [
                {
                    "field_name": "Enqueue_left_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "Dequeue_size_tmp",
            "ordered_fields": [
                {
                    "field_name": "Dequeue_size_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "Dequeue_head_tmp",
            "ordered_fields": [
                {
                    "field_name": "Dequeue_head_tmp",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 31
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "sizes$index",
            "ordered_fields": [
                {
                    "field_name": "sizes$index",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 9
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "sizes$ena",
            "ordered_fields": [
                {
                    "field_name": "sizes$ena",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "ring_buffers$index",
            "ordered_fields": [
                {
                    "field_name": "ring_buffers$index",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 9
                    }
                }
            ],
            "type": "header"
        },
        {
            "gress": "ingress",
            "name": "ring_buffers$ena",
            "ordered_fields": [
                {
                    "field_name": "ring_buffers$ena",
                    "slice_info": {
                        "lsb": 0,
                        "msb": 0
                    }
                }
            ],
            "type": "header"
        }
    ],
    "target": "tofino"
}