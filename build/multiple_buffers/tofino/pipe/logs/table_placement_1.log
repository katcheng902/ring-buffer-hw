Table Placement ignores container conflicts? 0
table placement starting pipe
ingress: [2017341]
  dmac_0{ E 38+1, 0 0K }
    drop: [2017477] 1 00 110
      Enqueue_first_table
        stateful firsts    2
      Enqueue_inc_tail_table
        stateful tails    2
      Enqueue_inc_size_table
        stateful sizes    2
      Enqueue_enqueue_table_two
        stateful rb2   16
    NoAction: [2017747] 1
      Dequeue_dec_size_table
        stateful sizes    2
      cond-2(ingress::Dequeue_size_tmp == 0; => $false, 1 => $true)
        $true: [2017821] 1
          Dequeue_inc_head_table
            stateful heads    2
          Dequeue_dequeue_table_two
            stateful rb2   16
egress: [2020618]

stage 0, work: [ 2017341 ], partly placed 0, placed 0
    { id=0 ram=0 tcam=0 mram=0 eixb=0 tixb=0 malu=0 salu=0 }
  Group table: dmac_0
dmac_0 is not a gateway! Aborting search for merge choices
try_place_table(dmac_0, stage=0)
  Initial stage is 0, initial entries is 256
Trying to allocate imem for dmac_0
Trying to allocate imem for dmac_0
  Selected stage: 0    Furthest stage: 0
  try_place_table returning 4096 of dmac_0 in stage 0
    Pl vector: [ dmac_0 ]
found 1 tables that could be placed: [ dmac_0 ]
Initial best is first table seen: dmac_0
placing 4096 entries of dmac_0 in stage 0(0) FormatType(02)
stage 0, work: [ 2017477, 2017747 ], partly placed 0, placed 1
    { id=1 ram=4 tcam=0 mram=0 eixb=6 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
Enqueue_first_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_first_table, stage=0)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Enqueue_first_table in stage 0
    Pl vector: [ Enqueue_first_table ]
  - skipping Enqueue_inc_tail_table due to in-sequence control dependence on Enqueue_first_table
Enqueue_inc_size_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_size_table, stage=0)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_inc_size_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_inc_size_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_size_table in stage 0 (need more)
    Pl vector: [ Enqueue_inc_size_table ]
  - skipping Enqueue_enqueue_table_two due to in-sequence control dependence on Enqueue_first_table
  Group table: Dequeue_dec_size_table
  Group table: cond-2
Dequeue_dec_size_table is not a gateway! Aborting search for merge choices
try_place_table(Dequeue_dec_size_table, stage=0)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Dequeue_dec_size_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Dequeue_dec_size_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Dequeue_dec_size_table in stage 0 (need more)
    Pl vector: [ Dequeue_dec_size_table ]
  - skipping cond-2 due to in-sequence control dependence on Dequeue_dec_size_table
found 3 tables that could be placed: [ Enqueue_first_table, Enqueue_inc_size_table, Dequeue_dec_size_table ]
Initial best is first table seen: Enqueue_first_table
For trial t : Enqueue_inc_size_table with best: Enqueue_first_table
    Keeping best Enqueue_first_table for reason: longer downward prop control-included dependence tail chain
For trial t : Dequeue_dec_size_table with best: Enqueue_first_table
    Keeping best Enqueue_first_table for reason: longer control-excluded dependence tail chain
placing 512 entries of Enqueue_first_table in stage 0(1) FormatType(022)
stage 0, work: [ 2017477, 2017747 ], partly placed 0, placed 2
    { id=1 ram=4 tcam=0 mram=0 eixb=6 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
Enqueue_inc_tail_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_tail_table, stage=0)
  - dependency between Enqueue_first_table and table advances stage
  Initial stage is 1, initial entries is 512
Trying to allocate imem for Enqueue_inc_tail_table
Trying to allocate imem for Enqueue_inc_tail_table
  Selected stage: 1    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_tail_table in stage 1
    Pl vector: [ Enqueue_inc_tail_table ]
Enqueue_inc_size_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_size_table, stage=0)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Enqueue_inc_size_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Enqueue_inc_size_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_size_table in stage 0 (need more)
    Pl vector: [ Enqueue_inc_size_table ]
  - skipping Enqueue_enqueue_table_two due to in-sequence control dependence on Enqueue_inc_tail_table
  Group table: Dequeue_dec_size_table
  Group table: cond-2
Dequeue_dec_size_table is not a gateway! Aborting search for merge choices
try_place_table(Dequeue_dec_size_table, stage=0)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Dequeue_dec_size_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Dequeue_dec_size_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Dequeue_dec_size_table in stage 0 (need more)
    Pl vector: [ Dequeue_dec_size_table ]
  - skipping cond-2 due to in-sequence control dependence on Dequeue_dec_size_table
found 3 tables that could be placed: [ Enqueue_inc_tail_table, Enqueue_inc_size_table, Dequeue_dec_size_table ]
Initial best is first table seen: Enqueue_inc_tail_table
For trial t : Enqueue_inc_size_table with best: Enqueue_inc_tail_table
    Updating best to Enqueue_inc_size_table from Enqueue_inc_tail_table for reason: earlier stage calculated
For trial t : Dequeue_dec_size_table with best: Enqueue_inc_size_table
    Updating best to Dequeue_dec_size_table from Enqueue_inc_size_table for reason: longer downward prop control-included dependence tail chain
placing 512 entries of Dequeue_dec_size_table in stage 0(2) FormatType(042) (need more)
stage 0, work: [ 2017477, 2017747 ], partly placed 1, placed 3
    { id=1 ram=4 tcam=0 mram=0 eixb=6 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
Enqueue_inc_tail_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_tail_table, stage=0)
  - dependency between Enqueue_first_table and table advances stage
  Initial stage is 1, initial entries is 512
Trying to allocate imem for Enqueue_inc_tail_table
Trying to allocate imem for Enqueue_inc_tail_table
  Selected stage: 1    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_tail_table in stage 1
    Pl vector: [ Enqueue_inc_tail_table ]
Enqueue_inc_size_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_size_table, stage=0)
    Dequeue_dec_size_table is now also placed (1)
  Initial stage is 0, initial entries is 512
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Dequeue_dec_size_table
Trying to allocate imem for Enqueue_inc_size_table
Trying to allocate imem for dmac_0
Trying to allocate imem for Enqueue_first_table
Trying to allocate imem for Dequeue_dec_size_table
Trying to allocate imem for Enqueue_inc_size_table
  Selected stage: 0    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_size_table in stage 0
    Pl vector: [ Enqueue_inc_size_table ]
  - skipping Enqueue_enqueue_table_two due to in-sequence control dependence on Enqueue_inc_tail_table
  Group table: Dequeue_dec_size_table
  Group table: cond-2
Dequeue_dec_size_table is not a gateway! Aborting search for merge choices
try_place_table(Dequeue_dec_size_table, stage=0)
  Cannot place multiple sections of an individual table in the same stage
    Pl vector: []
  - skipping cond-2 due to in-sequence control dependence on Dequeue_dec_size_table
found 2 tables that could be placed: [ Enqueue_inc_tail_table, Enqueue_inc_size_table ]
Initial best is first table seen: Enqueue_inc_tail_table
For trial t : Enqueue_inc_size_table with best: Enqueue_inc_tail_table
    Updating best to Enqueue_inc_size_table from Enqueue_inc_tail_table for reason: earlier stage calculated
placing 512 entries of Enqueue_inc_size_table in stage 0(3) FormatType(022)
stage 0, work: [ 2017477, 2017747 ], partly placed 0, placed 4
    { id=1 ram=4 tcam=0 mram=0 eixb=6 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
Enqueue_inc_tail_table is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_inc_tail_table, stage=0)
  - dependency between Enqueue_first_table and table advances stage
  Initial stage is 1, initial entries is 512
Trying to allocate imem for Enqueue_inc_tail_table
Trying to allocate imem for Enqueue_inc_tail_table
  Selected stage: 1    Furthest stage: 1
  try_place_table returning 512 of Enqueue_inc_tail_table in stage 1
    Pl vector: [ Enqueue_inc_tail_table ]
    - skipping Enqueue_inc_size_table as its already done
  - skipping Enqueue_enqueue_table_two due to in-sequence control dependence on Enqueue_inc_tail_table
  Group table: Dequeue_dec_size_table
  Group table: cond-2
    - skipping Dequeue_dec_size_table as its already done
try_place_table(cond-2, stage=0)
  Merging with match table Dequeue_inc_head_table
  - dependency between Dequeue_dec_size_table and table advances stage
  Initial stage is 1, initial entries is 512
Trying to allocate imem for Dequeue_inc_head_table
Trying to allocate imem for Dequeue_inc_head_table
  Selected stage: 1    Furthest stage: 1
  try_place_table returning 512 of Dequeue_inc_head_table in stage 1
    Pl vector: [ Dequeue_inc_head_table ]
found 2 tables that could be placed: [ Enqueue_inc_tail_table, Dequeue_inc_head_table ]
Initial best is first table seen: Enqueue_inc_tail_table
For trial t : Dequeue_inc_head_table with best: Enqueue_inc_tail_table
    Keeping best Enqueue_inc_tail_table for reason: longer downward dominance frontier dependence chain
placing 512 entries of Enqueue_inc_tail_table in stage 1(10) FormatType(022)
stage 1, work: [ 2017477, 2017747 ], partly placed 0, placed 5
    { id=0 ram=0 tcam=0 mram=0 eixb=0 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
    - skipping Enqueue_inc_tail_table as its already done
    - skipping Enqueue_inc_size_table as its already done
Enqueue_enqueue_table_two is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_enqueue_table_two, stage=1)
  - dependency between Enqueue_inc_tail_table and table advances stage
  Initial stage is 2, initial entries is 512
Trying to allocate imem for Enqueue_enqueue_table_two
Trying to allocate imem for Enqueue_enqueue_table_two
  Selected stage: 2    Furthest stage: 2
  try_place_table returning 512 of Enqueue_enqueue_table_two in stage 2 (need more)
    Pl vector: [ Enqueue_enqueue_table_two ]
  Group table: Dequeue_dec_size_table
  Group table: cond-2
    - skipping Dequeue_dec_size_table as its already done
try_place_table(cond-2, stage=1)
  Merging with match table Dequeue_inc_head_table
  Initial stage is 1, initial entries is 512
Trying to allocate imem for Enqueue_inc_tail_table
Trying to allocate imem for Dequeue_inc_head_table
Trying to allocate imem for Enqueue_inc_tail_table
Trying to allocate imem for Dequeue_inc_head_table
  Selected stage: 1    Furthest stage: 2
  try_place_table returning 512 of Dequeue_inc_head_table in stage 1
    Pl vector: [ Dequeue_inc_head_table ]
found 2 tables that could be placed: [ Enqueue_enqueue_table_two, Dequeue_inc_head_table ]
Initial best is first table seen: Enqueue_enqueue_table_two
For trial t : Dequeue_inc_head_table with best: Enqueue_enqueue_table_two
    Updating best to Dequeue_inc_head_table from Enqueue_enqueue_table_two for reason: earlier stage calculated
placing 512 entries of Dequeue_inc_head_table (with gw cond-2) in stage 1(11) FormatType(022)
stage 1, work: [ 2017477, 2017821 ], partly placed 0, placed 6
    { id=0 ram=0 tcam=0 mram=0 eixb=0 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
    - skipping Enqueue_inc_tail_table as its already done
    - skipping Enqueue_inc_size_table as its already done
Enqueue_enqueue_table_two is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_enqueue_table_two, stage=1)
  - dependency between Dequeue_inc_head_table and Dequeue_dequeue_table_two advances stage
  Initial stage is 2, initial entries is 512
Trying to allocate imem for Enqueue_enqueue_table_two
Trying to allocate imem for Enqueue_enqueue_table_two
  Selected stage: 2    Furthest stage: 2
  try_place_table returning 512 of Enqueue_enqueue_table_two in stage 2 (need more)
    Pl vector: [ Enqueue_enqueue_table_two ]
  Group table: Dequeue_inc_head_table
  Group table: Dequeue_dequeue_table_two
    - skipping Dequeue_inc_head_table as its already done
Dequeue_dequeue_table_two is not a gateway! Aborting search for merge choices
try_place_table(Dequeue_dequeue_table_two, stage=1)
  - dependency between Dequeue_inc_head_table and table advances stage
  Initial stage is 2, initial entries is 512
Trying to allocate imem for Dequeue_dequeue_table_two
Trying to allocate imem for Dequeue_dequeue_table_two
  Selected stage: 2    Furthest stage: 2
  try_place_table returning 512 of Dequeue_dequeue_table_two in stage 2 (need more)
    Pl vector: [ Dequeue_dequeue_table_two ]
found 2 tables that could be placed: [ Enqueue_enqueue_table_two, Dequeue_dequeue_table_two ]
Initial best is first table seen: Enqueue_enqueue_table_two
For trial t : Dequeue_dequeue_table_two with best: Enqueue_enqueue_table_two
    Updating best to Dequeue_dequeue_table_two from Enqueue_enqueue_table_two for reason: default choice
placing 512 entries of Dequeue_dequeue_table_two in stage 2(20) FormatType(042) (need more)
stage 2, work: [ 2017477, 2017821 ], partly placed 1, placed 7
    { id=0 ram=0 tcam=0 mram=0 eixb=0 tixb=0 malu=0 salu=0 }
  Group table: Enqueue_first_table
  Group table: Enqueue_inc_tail_table
  Group table: Enqueue_inc_size_table
  Group table: Enqueue_enqueue_table_two
    - skipping Enqueue_first_table as its already done
    - skipping Enqueue_inc_tail_table as its already done
    - skipping Enqueue_inc_size_table as its already done
Enqueue_enqueue_table_two is not a gateway! Aborting search for merge choices
try_place_table(Enqueue_enqueue_table_two, stage=2)
    Dequeue_dequeue_table_two is now also placed (1)
  Initial stage is 2, initial entries is 512
Trying to allocate imem for Dequeue_dequeue_table_two
Trying to allocate imem for Enqueue_enqueue_table_two
Trying to allocate imem for Dequeue_dequeue_table_two
Trying to allocate imem for Enqueue_enqueue_table_two
  Selected stage: 2    Furthest stage: 3
  try_place_table returning 512 of Enqueue_enqueue_table_two in stage 2
    Pl vector: [ Enqueue_enqueue_table_two ]
  Group table: Dequeue_inc_head_table
  Group table: Dequeue_dequeue_table_two
    - skipping Dequeue_inc_head_table as its already done
Dequeue_dequeue_table_two is not a gateway! Aborting search for merge choices
try_place_table(Dequeue_dequeue_table_two, stage=2)
  Cannot place multiple sections of an individual table in the same stage
    Pl vector: []
found 1 tables that could be placed: [ Enqueue_enqueue_table_two ]
Initial best is first table seen: Enqueue_enqueue_table_two
placing 512 entries of Enqueue_enqueue_table_two in stage 2(21) FormatType(022)
stage 2, work: [ 2017821 ], partly placed 0, placed 8
    { id=0 ram=0 tcam=0 mram=0 eixb=0 tixb=0 malu=0 salu=0 }
Adding complete placement for resource mode:0
Found a complete solution that fit the number of stages required
Evaluating complete solution with resource:0
Placement error(s):0 stages required:3
Updating best final placement with this one
Table placement placed 8 tables in 3 stages
  Table Enqueue_enqueue_table_two logical id 0x21 entries=512
    attached table rb2 entries=16
  Table Dequeue_dequeue_table_two logical id 0x20 entries=512
    attached table rb2 entries=16
  Table Dequeue_inc_head_table logical id 0x11 entries=512
    attached table heads entries=2
  Gateway cond-2 is also logical id 0x11
  Table Enqueue_inc_tail_table logical id 0x10 entries=512
    attached table tails entries=2
  Table Enqueue_inc_size_table logical id 0x3 entries=512
    attached table sizes entries=2
  Table Dequeue_dec_size_table logical id 0x2 entries=512
    attached table sizes entries=2
  Table Enqueue_first_table logical id 0x1 entries=512
    attached table firsts entries=2
  Table dmac_0 logical id 0x0 entries=4096
Finished table placement decisions pipe
  Adding Ternary Indirect table to Enqueue_first_table
  Adding Ternary Indirect table to Enqueue_inc_tail_table
  Adding Ternary Indirect table to Enqueue_inc_size_table
  Adding Ternary Indirect table to Dequeue_dec_size_table
folding gateway cond-2 onto Dequeue_inc_head_table
  Adding Ternary Indirect table to Dequeue_inc_head_table
table placement completed pipe
ingress: [2017341]
  0: dmac_0{ E 38+1, 0 [1x1 1K 1K 1K 1K] }
    drop: [2017477] 0 00 000
      1: Enqueue_first_table{ E 0+10, 0 0K }
        stateful firsts    2
      3: Enqueue_inc_size_table{ E 0+10, 0 0K }
        stateful sizes    2
      10: Enqueue_inc_tail_table{ E 0+10, 0 0K }
        stateful tails    2
      21: Enqueue_enqueue_table_two{ E 0+10, 0 0K }
        stateful rb2   16
    NoAction: [2017747] 0
      2: Dequeue_dec_size_table{ E 0+10, 0 0K }
        stateful sizes    2
      11: Dequeue_inc_head_table(ingress::Dequeue_size_tmp == 0; => $false, 1){ GE 0+10, 0 0K }
        stateful heads    2
        $default: [2017821]
          20: Dequeue_dequeue_table_two{ E 0+10, 0 0K }
            stateful rb2   16
        $false: [2075305]
egress: [2020618]

